library(lattice)
cloud(Sp3 ~ Sp4 + Sp5, spp, type="p",screen=c(x=-55,y=-30,z=-20),zlab=list(rot=90), pch=16)
library(lattice)
cloud(Sp3 ~ Sp4 + Sp5, spp, type="p",screen=c(x=-55,y=-30,z=-20),zlab=list(rot=90), pch=16)
pca <- prcomp(spp)
plot(pca)
screeplot(pca)
biplot(pca)
pca$sdev^2/sum(pca$sdev^2)
biplot(pca)
knitr::opts_chunk$set(echo = TRUE)
x <- rnorm(100)
boxplot(x)
data("ChickWeight")
ChickWeight
class(ChickWeight)
as.data.frame(ChickWeight)
head(ChickWeight)
nrow(ChickWeight)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
base.sp <- read.csv("Datos-bases/Datos-sp.csv")
names(base.sp)
base.sp$Sp1
base.sp$Sp5
base.sp$Sp1
base.sp[5, c(1, 4)]
base.sp[c(2, 4), c(1, 4)]
paste0("sitio.", 1:100)
base.sp$Sitio <- paste0("sitio.", 1:100)
head(base.sp)
base.sp.m <- reshape2::melt(base.sp, id.vars = "Sitio")
head(base.sp.m)
write.csv(base.sp, "Base-datos-ancho.csv")
write.csv(base.sp.m, "Base-datos-largo.csv")
data("mtcars")
names(mtcars)
mtcars.1 <- subset(mtcars, select = c("mpg", "cyl", "hp"))
head(mtcars.1)
1==0
1==1
mtcars$vs == 0
mtcars.vs <- subset(mtcars, vs == 0)
mtcars.vs
mtcars.vs <- subset(mtcars, vs == 0, mpg < 20)
mtcars.vs
mtcars.vs <- subset(mtcars, vs == 0 & mpg < 20 & am = 0)
mtcars.vs <- subset(mtcars, vs == 0 & mpg < 20 & am == 0)
mtcars.vs
head(mtcars.1)
head(mtcars.1)
mtcars.vs <- subset(mtcars, vs < 1)
mtcars.vs
mtcars.vs <- subset(mtcars, vs != 1)
mtcars.vs
mtcars.vs <- subset(mtcars, vs > -1 & vs < 1)
mtcars.vs
mtcars.2 <- subset(mtcars, vs != 1 & am > 0)
mtcars.2
mtcars.2 <- subset(mtcars, vs != 1 | am > 0)
mtcars.2
mtcars.2 <- subset(mtcars, vs != 1 & am > 0)
mtcars.1 <- subset(mtcars, vs == 0)
mtcars.2 <- subset(mtcars, vs > 0)
mtcars.1
mtcars.2
mtcars.f <- cbind(mtcars.1, mtcars.2)
mtcars.f <- rbind(mtcars.1, mtcars.2)
mtcars.f
mtcars.1$n <- "a"
mtcars.1
mtcars.f <- rbind(mtcars.1, mtcars.2)
mtcars.d <- mtcars[, c(1:6)]
mtcars.l <- mtcars[, c(7:11)]
mtcars.d
mtcars.l
mtcars.f <- cbind(mtcars.d, mtcars.l)
source("~/.active-rstudio-document", echo=TRUE)
mtcars.f
mtcars.d <- mtcars[-1, c(1:6)]
mtcars.f <- cbind(mtcars.d, mtcars.l)
library(dplyr)
mtcars.desc <- mtcars %>% arrange(mpg)
mtcars.desc
mtcars.desc <- mtcars %>% arrange(desc(mpg))
mtcars.desc
mtcars.ord1 <- mtcars %>% arrange(desc(mpg), qsec)
mtcars.ord1
mtcars.prom <- mtcars %>% group_by(cyl) %>% summarise(mpg = mean(mpg), hp = mean(hp))
mtcars.prom
mtcars.prom <- mtcars %>% group_by(cyl) %>% summarise(mpg = mean(mpg), hp = mean(hp), mpg.sd = sd(mpg))
mtcars.prom
mtcars.prom <- mtcars %>% group_by(cyl) %>% summarise(mpg = median(mpg), hp = mean(hp))
mtcars.prom
knitr::opts_chunk$set(echo = TRUE)
x <- rnorm(100)
y <- x + rnorm(100, 1, 0.25)
plot(x, y)
x <- rnorm(100)
y <- x + rnorm(100, 1, 0.25)
plot(x, y)
c("a", "b")
x <- 1:10
y <- 1:10
plot(x, y, type = "l")
x <- 1:10
y <- 1:10
plot(x, y, type = "l")
x <- 1:10
y <- 1:10
plot(x, y, type = "l")
x <- 1:10
y <- 1:10
plot(x, y, type = "l")
x <- 1:10
y <- 1:10
plot(x, y, type = "l")
boxplot(x)
hist(x)
x <- rnorm(100)
y <- x + rnorm(100, mean = 1, sd = 0.25)
plot(x, y)
boxplot(x)
hist(x)
x2 <- rnorm(100, mean = 1, sd = 2)
x3 <- rnorm(100, mean = 1.3, sd = 1.5)
tratamiento <- rep(c("a", "b"), each = 100)
base <- data.frame(Variable = c(x2, x3),
Tratamiento = tratamiento)
boxplot(Variable ~ Tratamiento, data = base)
hist(Variable ~ Tratamiento, data = base)
library(ggplot2)
c("a", "b")
library(ggplot2)
base.1 <- data.frame(x = x, y = y)
ggplot(base.1) + geom_point(aes(x = x, y = y))
library(ggplot2)
base.1 <- data.frame(x = x, y = y)
ggplot(base.1) + geom_point(aes(x = x, y = y))
ggplot(base) + geom_boxplot(aes(x = Tratamiento, y = Variable))
ggplot(base) + geom_boxplot(aes(x = Tratamiento, y = Variabe, fill = Variable))
ggplot(base) + geom_boxplot(aes(x = Tratamiento, y = Variable, fill = Variable))
ggplot(base) + geom_boxplot(aes(x = Tratamiento, y = Variable, fill = Tratamiento))
data("ChickWeight")
str(ChickWeight)
dieta.1 <- subset(ChickWeight, Diet == 1)
dieta.1
ch.w <- subset(ChickWeight, select = c("Chick", "weight"))
ch.w
head(ChickWeight)
ch.w <- ChickWeight[, c(1, 3)]
ch.w <- ChickWeight[, c("Chick", "weight")]
ch.w
ch.w.l <- reshape2::melt(ChickWeight, id.vars = c("Chick", "weight"))
ch.w.l <- reshape2::melt(ChickWeight, id.vars = c("Chick", "Diet"))
ch.w.l <- reshape2::melt(ChickWeight, id.vars = c("Chick", "weight"))
head(ch.w.l)
#4
Valores.nuevos <- rnorm(578)
ChickWeight$Valores.nuevos <- Valores.nuevos
head(ChickWeight)
library(dplyr)
ch.largo <- ChickWeight %>% arrange(desc(weight))
head(ch.largo)
ch.largo <- ChickWeight %>% arrange(desc(weight) & Valores.nuevos)
head(ch.largo)
ch.largo <- ChickWeight %>% arrange(desc(weight), Valores.nuevos)
head(ch.largo)
ch.agru <- ChickWeight %>% group_by(Diet) %>% summarise(weight = mean(weight))
ch.agru
dir.create("Tarea-1")
write.csv(dieta.1, "Tarea-1/Tarea-1.1.csv")
write.csv(dieta.2, "Tarea-1/Tarea-1.2.csv")
dieta.2 <- subset(ChickWeight, Diet == 2)
write.csv(dieta.2, "Tarea-1/Tarea-1.2.csv")
x <- rnorm(100)
y <- x + rnorm(100, mean = 1, sd = 0.25)
plot(x, y)
plot(x, y, col = "red")
plot(x, y, col = "red", cex = 1.5)
plot(x, y, col = "red", cex = 0.5, )
plot(x, y, col = "red", cex = 0.5, main = "Gráfico de dispersión")
plot(x, y, col = "red", cex = y, main = "Gráfico de dispersión", )
plot(x, y, col = "red", cex = 1, main = "Gráfico de dispersión",
pch = 1)
plot(x, y, col = "red", cex = 1, main = "Gráfico de dispersión",
pch = 2)
plot(x, y, col = "red", cex = 1, main = "Gráfico de dispersión",
pch = 3)
plot(x, y, col = "red", cex = 1, main = "Gráfico de dispersión",
pch = 4)
plot(x, y, col = "red", cex = 1, main = "Gráfico de dispersión",
pch = 5)
plot(x, y, col = "red", cex = 1, main = "Gráfico de dispersión",
pch = 20)
plot(x, y, col = "red", cex = 1, main = "Gráfico de dispersión",
pch = 2)
plot(x, y, col = "red", cex = 1, main = "Gráfico de dispersión",
pch = 3)
plot(x, y, col = "red", cex = 1, main = "Gráfico de dispersión",
pch = 4)
plot(x, y, col = "red", cex = 1, main = "Gráfico de dispersión",
pch = "w")
plot(x, y, col = "red", cex = 1, main = "Gráfico de dispersión",
pch = "popo")
rep(c("a", "b"), 50)
plot(x, y, col = "red", cex = 1, main = "Gráfico de dispersión",
pch = rep(c("a", "b"), 50))
x1 <- 1:10
y1 <- 1:10
plot(x1, y1, type = "l")
plot(x1, y1, type = "s")
plot(x1, y1, type = "p")
plot(x1, y1, type = "l")
plot(x1, y1, type = "l",
lty = 1)
plot(x1, y1, type = "l",
lty = 2)
plot(x1, y1, type = "l",
lty = 3)
plot(x1, y1, type = "l",
lty = 4)
plot(x1, y1, type = "l",
lty = 5)
plot(x1, y1, type = "l",
lty = 6)
plot(x1, y1, type = "l",
lty = 7)
y2 <- x1 * 1.1
lines(x1, y2, col = "red")
points(x1, y1)
point(x1, y2, col = "red")
points(x1, y2, col = "red")
lines(x1, y2, col = "red")
plot(x1, y1, type = "l",
lty = 7)
lines(x1, y2, col = "red")
points(x1, y1)
points(x1, y2, col = "red")
boxplot(x)
hist(x)
plot(density(x))
x2 <- rnorm(100, mean = 1, sd = 2)
x3 <- rnorm(100, mean = 1.3, sd = 1.5)
tratamiento <- rep(c("a", "b"), each = 100)
base <- data.frame(Variable = c(x2, x3),
Tratamiento = tratamiento)
head(base)
tail(base)
boxplot(Variable ~ Tratamiento, data = base)
library(ggplot2)
base.1 <- data.frame(x = x, y = y)
base.1
ggplot(base.1) + geom_point(aes(x = x, y = y))
base.1$catego <- rep(c("a", "b"), each = 50)
ggplot(base.1) + geom_point(aes(x = x, y = y, colour = catego))
base.1$cont <- 1:100
ggplot(base.1) + geom_point(aes(x = x, y = y, colour = cont))
ggplot(base.1) + geom_point(aes(x = x, y = y, colour = cont, shape = catego))
ggplot(base) <- geom_boxplot(aes(x = Tratamiento, y = Variable))
ggplot(base) + geom_boxplot(aes(x = Tratamiento, y = Variable))
ggplot(base) + geom_boxplot(aes(x = Tratamiento, y = Variable, fill = Tratamiento))
x4 <- rnorm(100, mean = 1.7, sd = 3)
trataminto2 <- rep(c("a, b"), 150)
tratamiento2 <- rep(c("a, b"), 150)
base <- data.frame(Variable = c(x2, x3),
Tratamiento = tratamiento,
Tratamiento2 = tratamiento2)
x2 <- rnorm(100, mean = 1, sd = 2)
x3 <- rnorm(100, mean = 1.3, sd = 1.5)
x4 <- rnorm(100, mean = 1.7, sd = 3)
tratamiento <- rep(c("a", "b", "c"), each = 100)
tratamiento2 <- rep(c("a, b"), 150)
base <- data.frame(Variable = c(x2, x3),
Tratamiento = tratamiento,
Tratamiento2 = tratamiento2)
tratamiento2 <- rep(c("a", "b"), 150)
base <- data.frame(Variable = c(x2, x3),
Tratamiento = tratamiento,
Tratamiento2 = tratamiento2)
x2 <- rnorm(100, mean = 1, sd = 2)
x3 <- rnorm(100, mean = 1.3, sd = 1.5)
x4 <- rnorm(100, mean = 1.7, sd = 3)
tratamiento <- rep(c("a", "b", "c"), each = 100)
tratamiento2 <- rep(c("a", "b"), 150)
base <- data.frame(Variable = c(x2, x3),
Tratamiento = tratamiento,
Tratamiento2 = tratamiento2)
tratamiento2
base <- data.frame(Variable = c(x2, x3, x4),
Tratamiento = tratamiento,
Tratamiento2 = tratamiento2)
boxplot(Variable ~ Tratamiento, data = base)
ggplot(base) + geom_boxplot(aes(x = Tratamiento, y = Variable, fill = Tratamiento))
base
ggplot(base) + geom_boxplot(aes(x = Tratamiento, y = Variable, fill = Tratamiento2))
base <- data.frame(Variable = c(x2, x3, x4),
Tratamiento = tratamiento,
Bloque = tratamiento2)
ggplot(base) + geom_boxplot(aes(x = Tratamiento, y = Variable, fill = Bloque))
ggplot(base) + geom_boxplot(aes(x = Tratamiento, y = Variable))
ggplot(base) + geom_boxplot(aes(x = Tratamiento, y = Variable)) +
facet_wrap(~ Bloque)
data("ChickWeight")
ggplot(ChickWeight) + geom_smooth(aes(x = Time, y = weigh, colour = Diet))
ggplot(ChickWeight) + geom_smooth(aes(x = Time, y = weight, colour = Diet))
ggplot(ChickWeight) + geom_smooth(aes(x = Time, y = weight, colour = Diet, fill = Diet), alpha = 0.5)
ggplot(ChickWeight) + geom_smooth(aes(x = Time, y = weight, colour = Diet, fill = Diet), alpha = 0.3)
ggplot(ChickWeight) + geom_smooth(aes(x = Time, y = weight, colour = Diet, fill = Diet),
alpha = 0.3, method = "loess") +
geom_point(aes(x = Time, y = weight, colour = Diet, shape = Diet), alpha = 0.2)
ggplot(ChickWeight) + geom_boxplot(aes(x = Time, y = weight, fill = Diet), alpha = 0.3)
ggplot(ChickWeight) + geom_boxplot(aes(x = Time, y = weight, fill = Diet), alpha = 1)
ggplot(ChickWeight) + geom_boxplot(aes(x = Time, y = weight, fill = Diet), alpha = 0.2)
ggplot(ChickWeight) + geom_point(aes(x = Time, y = weight, colour = Diet), alpha = 0.2)
ggplot(ChickWeight) + geom_point(aes(x = Time, y = weight, colour = Diet), alpha = 0.2) +
geom_boxplot(aes(x = Time, y = weight))
ggplot(ChickWeight) + geom_point(aes(x = Time, y = weight, colour = Diet), alpha = 0.2) +
geom_boxplot(aes(group = Time, y = weight))
ggplot(ChickWeight) + geom_point(aes(x = Time, y = weight, colour = Diet), alpha = 0.2) +
geom_boxplot(aes(x = Time, group = Time, y = weight))
ggplot(ChickWeight) + geom_point(aes(x = Time, y = weight, colour = Diet), alpha = 0.2) +
geom_boxplot(aes(x = Time, group = Time, y = weight), alpha = 0.2)
ggplot(ChickWeight) + geom_point(aes(x = Time, y = weight, colour = Diet), alpha = 0.2) +
geom_boxplot(aes(x = Time, group = Time, y = weight, fill = Diet), alpha = 0.2)
ggplot(ChickWeight) + geom_smooth(aes(x = Time, y = weight, colour = Diet, fill = Diet),
alpha = 0.3, method = "loess") +
geom_point(aes(x = Time, y = weight, colour = Diet, shape = Diet), alpha = 0.2)
ggplot(ChickWeight) + geom_smooth(aes(x = Time, y = weight, colour = Diet, fill = Diet),
alpha = 0.3, method = "lm") +
geom_point(aes(x = Time, y = weight, colour = Diet, shape = Diet), alpha = 0.2)
knitr::opts_chunk$set(echo = TRUE)
pairs(spp, upper.panel = NULL)
spp <- read.csv("Datos-bases/Datos-sp.csv")
pairs(spp, upper.panel = NULL)
cor(spp)
data(mtcars)
pc.mt <- prcomp(mtcars)
biplot(pc.mt)
data(mtcars)
pc.mt <- prcomp(mtcars)
biplot(pc.mt)
plot(pc.mt)
head(pc.mt)
head(mtcars)
pairs(mtcars)
str(mtcars)
library(lattice)
cloud(Sp3 ~ Sp4 + Sp5, spp, type="p",screen=c(x=-55,y=-30,z=-20),zlab=list(rot=90), pch=16)
pca <- prcomp(spp)
plot(pca)
pca$sdev^2/sum(pca$sdev^2)
biplot(pca)
set.seed(10)
spp.10 <- spp[sample(1:100, 10),]
set.seed(10)
spp.10 <- spp[sample(1:100, 10),]
spp.10
intersect(spp.10)
intersect(spp.10$Sp1, spp.10$Sp2)
intersect(spp.10$Sp1, spp.10$Sp3)
intersect(spp.10$Sp1, spp.10$Sp4)
intersect(spp.10$Sp1, spp.10$Sp5)
jaccar(spp.10[1,], spp.10[2,])
jaccard(spp.10[1,], spp.10[2,])
jaccard <- function(A, B){
interseccion = length(intersect(A, B))
union = length(A) + length(B) - interseccion
return (interseccion/union)
}
jaccard(spp.10[1,], spp.10[2,])
m <- matrix(0, 10, 10)
for (i in 1:10) {
for(j in 1:10){
m[i, j] <- jaccard(spp.10[i, ], spp[j, ])
}
}
image(m)
m
m <- matrix(0, 10, 10)
for (i in 1:10) {
for(j in 1:10){
m[i, j] <- jaccard(spp.10[i, ], spp.10[j, ])
}
}
image(m)
m
image(t(m))
m <- matrix(0, 10, 10)
for (i in 1:10) {
for(j in 10:1){
m[i, j] <- jaccard(spp.10[i, ], spp.10[j, ])
}
}
image(m)
m <- matrix(0, 10, 10)
for (i in 1:10) {
for(j in 1:10){
m[i, j] <- jaccard(spp.10[i, ], spp.10[j, ])
}
}
image(t(m))
m <- matrix(0, 10, 10)
for (i in 1:10) {
for(j in 10:1){
m[i, j] <- jaccard(spp.10[i, ], spp.10[j, ])
}
}
image(t(m))
m <- matrix(0, 10, 10)
for (i in 1:10) {
for(j in 10:1){
m[i, j] <- jaccard(spp.10[i, ], spp.10[j, ])
}
}
image(m)
m <- matrix(0, 10, 10)
for (i in 1:10) {
for(j in 10:1){
m[i, j] <- jaccard(spp.10[i, ], spp.10[j, ])
}
}
image(m, xlab = paste0("Sitio ", 1:10),
ylab = paste0("Sitio ", 10:1))
jaccard(spp.10[2, ], spp.10[2,])
intersect(spp.10[2,], spp.10[2,])
length(intersect(spp.10[2,], spp.10[2,]))
spp.10[2, ]
length(spp.10[2, ])
m <- matrix(0, 10, 10)
for (i in 1:10) {
for(j in 10:1){
m[i, j] <- jaccard(spp.10[i, ], spp.10[j, ])
}
}
image(m)
install.packages("abdiv")
library(abdiv)
simp <- simpson(spp.10)
simp
library(abdiv)
simp <- simpson(spp.10[1, ])
simp
library(abdiv)
simp <- apply(spp.10, 1, simpson)
simp.df <- data.frame(Sitio = 1:10, Simp.ind = simp)
knitr::kable(simp.df, caption = "Índice de diversidad de Simpson calculado para los sitios 1 a 10.")
medias <- colMeans(spp.10)
medias
mat.cov <- cov(medias, spp.10, "pearson")
mat.cov <- cov(medias, spp.10, use = "pearson")
mat.cov <- cov(medias, spp.10)
mat.cov <- cov(spp.10, medias)
mat.cov <- cov(spp.10)
mat.cov
dists <- mahalanobis(spp.10, center = medias, cov = cov.mat)
dists <- mahalanobis(spp.10, center = medias, cov = mat.cov)
dists.df <- data.frame(Sitio = paste0("Sitio ", 1:10),
Distancia = dists)
knitr::kable(dists.df, caption = "Distancias de Mahalanobis al centroide de las abundancias registradas.")
data("ChickWeight")
ggplot(ChickWeight) + geom_smooth(aes(x = Time, y = weight, colour = Diet, fill = Diet),
alpha = 0.3, method = "loess") +
geom_point(aes(x = Time, y = weight, colour = Diet, shape = Diet), alpha = 0.2)
library(ggplot2)
ggplot(ChickWeight) + geom_smooth(aes(x = Time, y = weight, colour = Diet, fill = Diet),
alpha = 0.3, method = "loess") +
geom_point(aes(x = Time, y = weight, colour = Diet, shape = Diet), alpha = 0.2)
knitr::opts_chunk$set(echo = TRUE)
is.na(x)
x[is.na(x)] <- 0
pairs(spp, upper.panel = NULL)
spp <- read.csv("Datos-bases/Datos-sp.csv")
pairs(spp, upper.panel = NULL)
cor(spp)
cloud(Sp3 ~ Sp4 + Sp5, spp, type="p",
screen=c(x=-55,y=-30,z=-20),zlab=list(rot=90), pch=16)
library(lattice)
cloud(Sp3 ~ Sp4 + Sp5, spp, type="p",
screen=c(x=-55,y=-30,z=-20),zlab=list(rot=90), pch=16)
cloud(Sp3 ~ Sp4 + Sp5, spp, type="p",
screen=c(x=-55,y=-50,z=-20),zlab=list(rot=90), pch=16)
cloud(Sp3 ~ Sp4 + Sp5, spp, type="p",
screen=c(x=-60,y=-50,z=-20),zlab=list(rot=90), pch=16)
pca <- prcomp(spp)
summary(pca)
plot(pca)
pca$x
biplot(pca)
set.seed(10)
spp.10 <- spp[sample(1:100, 10),]
spp.10
jaccard <- function(A, B){
interseccion = length(intersect(A, B))
union = length(A) + length(B) - interseccion
return (interseccion/union)
}
spp.10[1,]
spp.10[2,]
jaccard(A = spp.10[1,], B = spp.10[2,])
m <- matrix(0, 10, 10)
for (i in 1:10) {
for(j in 1:10){
m[i, j] <- jaccard(spp.10[i, ], spp.10[j, ])
}
}
image(m)
text(0, 1, "Progreso")
install.packages("rgl")
install.packages("rgl")
install.packages("rgl")
